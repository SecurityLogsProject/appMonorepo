generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  daemons       Machine[]
}

model Machine {
  id            String    @id @default(cuid())
  name          String
  userEmail     String
  machineKey    String
  logs          Log[]
  user User @relation(fields: [userEmail], references: [email])
  @@unique([userEmail, name])
}

model Log {
  id            String    @id @default(cuid())
  content       String
  machineId     String
  machine Machine @relation(fields: [machineId], references: [id])
  events        Event[]
}

model Event {
  event_id      String    @id @default(cuid())
  logId         String    
  log Log  @relation(fields: [logId], references: [id], onDelete: Cascade)
  event_data    String
  event_type    String
  event_record  String
  event_source  String
  event_content String
}